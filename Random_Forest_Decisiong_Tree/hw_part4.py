# -*- coding: utf-8 -*-
"""HW_part4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DkwH6w7beOw88llwrBHhAEzsmRI2QMIg
"""

from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_classification
from numpy.lib.function_base import average
from re import U
from sklearn import tree
from sklearn.model_selection import train_test_split
import pydot
import graphviz
import pandas as pd
import pydotplus
import collections
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import MinMaxScaler
import numpy as np



dataFrame = pd.read_excel('Census_Supplement.xlsx', usecols="I,M,P,R,U")
#print(dataFrame)
y=dataFrame.HAS_DIV
#print(y)
x=dataFrame.drop(["HAS_DIV"],axis=1)
#print(x)

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3,random_state=42)

scaler=MinMaxScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)
#print(X_train)
#print(X_test)
clf = RandomForestClassifier(n_estimators=1000,criterion="gini", max_depth=15, min_samples_leaf=100, bootstrap= True)
clf = clf.fit(X_train,y_train) # train it on this data

score=clf.score(X_test, y_test)
print("This is the confusion matrix accuracy")
print(score)

y_pred=clf.predict(X_test)

Con_mat=confusion_matrix(y_test,y_pred)

print("This is the confusion matrix")
print(Con_mat)

x=np.concatenate((X_train,X_test),axis=0)

#print(x)

cross_scores=cross_val_score(clf,x,y)

#print(cross_scores)

print("This is the cross validation average score ")
print(average(cross_scores))