# -*- coding: utf-8 -*-
"""CSV_parsing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EnzOmc0HtFYLYfmq1rr8-Rl-1kdkecAL
"""

#Designed by Muhammad Farhan Azmine


from numpy.core.fromnumeric import shape
from sklearn.metrics._plot.confusion_matrix import confusion_matrix
from numpy.lib.function_base import average 
from re import U 
from sklearn import tree 
from sklearn.model_selection import train_test_split 
import pydot 
import graphviz 
import pandas as pd 
import pydotplus 
import collections
import matplotlib.pyplot as plt
from sklearn.linear_model import SGDClassifier

from sklearn.metrics import confusion_matrix
from sklearn.metrics import plot_confusion_matrix
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

from sklearn.metrics import accuracy_score
from sklearn.neural_network import MLPClassifier
from sklearn.datasets import make_classification
from sklearn.preprocessing import MinMaxScaler
import numpy as np

from sklearn.metrics import mean_squared_error
from sklearn.model_selection import validation_curve


from sklearn.preprocessing import LabelEncoder, OneHotEncoder

from sklearn.compose import ColumnTransformer



from sklearn.linear_model import LogisticRegression
from sklearn import linear_model as linmod
from sklearn import metrics
from sklearn import preprocessing as preproc
from sklearn.feature_selection import SequentialFeatureSelector
from sklearn.feature_selection import RFE
from sklearn.feature_selection import RFECV
from sklearn.metrics import accuracy_score




dataFrame = pd.read_csv('Real_time_MIT_revised_dataset_NOT_Seizure_segs.csv') 

df=dataFrame
df2=[]
columns = list(dataFrame) 
print(df.index)
#df2=df[df.index]

for i in range(29):
   
  #for j in (1,5352,3):

    ##if i%3 == 0: 
     # *print(df.iloc[i,::3])
      df2.append(df.iloc[i,1:5352:3])
      
      # printing the third element of the column 
      #print (dataFrame.iloc[i][col][2])


#print(df)
#df2=pd.DataFrame[:,0]

#j=0
print(type(df2))

#for i in range(1,5353,3):

#  df2=pd.concat(df2.iloc[j,0],dataFrame.iloc[0])
  #j=j+1
df2=pd.DataFrame(df2)
df1=df2.T
df1.to_csv("test_1.csv",index=True)
print(df1)

from numpy.core.fromnumeric import shape
from sklearn.metrics._plot.confusion_matrix import confusion_matrix
from numpy.lib.function_base import average 
from re import U 
from sklearn import tree 
from sklearn.model_selection import train_test_split 
import pydot 
import graphviz 
import pandas as pd 
import pydotplus 
import collections
import matplotlib.pyplot as plt
from sklearn.linear_model import SGDClassifier

from sklearn.metrics import confusion_matrix
from sklearn.metrics import plot_confusion_matrix
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

from sklearn.metrics import accuracy_score
from sklearn.neural_network import MLPClassifier
from sklearn.datasets import make_classification
from sklearn.preprocessing import MinMaxScaler
import numpy as np

from sklearn.metrics import mean_squared_error
from sklearn.model_selection import validation_curve


from sklearn.preprocessing import LabelEncoder, OneHotEncoder

from sklearn.compose import ColumnTransformer



from sklearn.linear_model import LogisticRegression
from sklearn import linear_model as linmod
from sklearn import metrics
from sklearn import preprocessing as preproc
from sklearn.feature_selection import SequentialFeatureSelector
from sklearn.feature_selection import RFE
from sklearn.feature_selection import RFECV
from sklearn.metrics import accuracy_score


dataFrame = pd.read_csv('Real_time_MIT_revised_dataset_NOT_Seizure_segs.csv') 


df=dataFrame
df2=[]
columns = list(dataFrame) 
print(df.index)
#df2=df[df.index]

for i in range(29):
   
  #for j in (1,5352,3):

    ##if i%3 == 0: 
     # *print(df.iloc[i,::3])
      df2.append(df.iloc[i,2:5352:3])
      # printing the third element of the column 
      #print (dataFrame.iloc[i][col][2])


#print(df)
#df2=pd.DataFrame[:,0]

#j=0
print(type(df2))

#for i in range(1,5353,3):

#  df2=pd.concat(df2.iloc[j,0],dataFrame.iloc[0])
  #j=j+1
df2=pd.DataFrame(df2)
df4=df2.T
df4.to_csv("complexity.csv",index=True)
print(df4)

from numpy.core.fromnumeric import shape
from sklearn.metrics._plot.confusion_matrix import confusion_matrix
from numpy.lib.function_base import average 
from re import U 
from sklearn import tree 
from sklearn.model_selection import train_test_split 
import pydot 
import graphviz 
import pandas as pd 
import pydotplus 
import collections
import matplotlib.pyplot as plt
from sklearn.linear_model import SGDClassifier

from sklearn.metrics import confusion_matrix
from sklearn.metrics import plot_confusion_matrix
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

from sklearn.metrics import accuracy_score
from sklearn.neural_network import MLPClassifier
from sklearn.datasets import make_classification
from sklearn.preprocessing import MinMaxScaler
import numpy as np

from sklearn.metrics import mean_squared_error
from sklearn.model_selection import validation_curve


from sklearn.preprocessing import LabelEncoder, OneHotEncoder

from sklearn.compose import ColumnTransformer



from sklearn.linear_model import LogisticRegression
from sklearn import linear_model as linmod
from sklearn import metrics
from sklearn import preprocessing as preproc
from sklearn.feature_selection import SequentialFeatureSelector
from sklearn.feature_selection import RFE
from sklearn.feature_selection import RFECV
from sklearn.metrics import accuracy_score




dataFrame = pd.read_csv('Real_time_MIT_revised_dataset_NOT_Seizure_segs.csv') 


df=dataFrame
df2=[]
columns = list(dataFrame) 
print(df.index)
#df2=df[df.index]

for i in range(29):
   
  #for j in (1,5352,3):

    ##if i%3 == 0: 
     # *print(df.iloc[i,::3])
      df2.append(df.iloc[i,3:5352:3])
      # printing the third element of the column 
      #print (dataFrame.iloc[i][col][2])


#print(df)
#df2=pd.DataFrame[:,0]

#j=0
print(type(df2))

#for i in range(1,5353,3):

#  df2=pd.concat(df2.iloc[j,0],dataFrame.iloc[0])
  #j=j+1
df2=pd.DataFrame(df2)
df3=df2.T
df3.to_csv("complexity.csv",index=True)
print(df3)

frames = [df1,df3,df4]

result = pd.concat(frames,axis='rows')

print(result)

result.to_csv("Real_time_Siena__Non_Seizure_only_segs_final_report.csv",index=True)